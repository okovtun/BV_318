https://github.com/okovtun/BV_318.git
https://www.youtube.com/playlist?list=PLeqyOOqxeiIPr0w-njMVR2sWVWf6cWlqL
https://chat.whatsapp.com/KhU5DwD5zLNGATggxCkI0Q

Install:
https://anydesk.com/en/downloads/windows

TOREAD:
1. https://www.ixbt.com/cpu/x86-cpu-faq-2006.shtml;
2. https://www.ixbt.com/cpu/cpu-digest-2009.shtml;

TODO:
Отдохнуть перед новой дисциплиной)

TODO:
В проекте 'Strings' написать следующие функции:
	??? to_lower(???);		//переводит строку в нижний регистр				DONE
	??? to_upper(???);		//переводит строку в верхний регистр			DONE
	??? shrink(???);		//удаляет из строки лишние пробелы				DONE
							//Хорошо        живет    на   свете      Винни    Пух
							//Хорошо живет на свете Винни Пух
	??? is_palindrome(???);	//Определяет, является ли строка палиндромом	DONE
	
	??? is_int_number(???);	//определяет, является ли строка целым числом
	??? to_int_number(???);	//Если строка является целым числом, возвращает его значение

	??? is_bin_number(???);	//определяет, является ли строка двоичным числом
	??? bin_to_dec(???);	//Если строка является двоичным числом, возвращает его десятичное значение
	
	??? is_hex_number(???);	//определяет, является ли строка шестнадцатеричным числом
	??? hex_to_dec(???);	//Если строка является шестнадцатеричным числом, возвращает его десятичное значение

////////////////////////////////////////////////////////////////////////
////////////				  POINTERS						////////////
////////////////////////////////////////////////////////////////////////

TODO:
0. !!!!!!!!!!!!			Выучить теорию по указателям		!!!!!!!!!!!!

1. Написать следующие функции:
	??? insert(???);	//вставляет значение в массив по указанному индексу
	??? pop_front(???);	//удаляет нудевой элемент массива
	??? erase(???);		//удаляет значение по заданному индексу

2. В проекте 'DynamicMemory' написать следующие функции:
	Оптимизировать функции для эффективного использования памяти.
	??? Allocate(???);			//выделяет память под двумерный динамиеский массив
	??? Clear(???);				//удаляет двумерный динамиеский массив из памяти

	??? push_row_front(???);	//добавляет строку в начало массива
	??? insert_row(???);		//вставляет строку в массив по указанному индексу

	??? pop_row_back(???);		//удаляет последнюю строку из массива
	??? pop_row_front(???);		//удаляет нулевую строку из массива
	??? erase_row(???);			//удаляет строку из массива по заданному индексу

	??? push_col_back(???);		//добавляет столбец в конец массива
	??? push_col_front(???);	//добавляет столбец в начало массива
	??? insert_col(???);		//вставляет столбец в массив по указанному индексу

	??? pop_col_back(???);		//удаляет последний столбец из массива
	??? pop_col_front(???);		//удаляет нулевой столбец из массива
	??? erase_col(???);			//удаляет столбец из массива по указанному индексу

3. !!! Сделать commit и push !!!, потом создать ветку 'DynamicTemplated',
   и в этой ветке шаблонизировать все функции для работы с динамическими массивами;

4. !!! Сделать commit и push !!!, потом от ветки 'DynamicTemplated', создать ветку
   'DynamicTemplatedOptimisation', и в ней оптимизировать код;

DONE:
1. В проекте 'DynamicMemory' добавить значение в конец массива.

DONE:
1. В Solution 'Pointers' добавить проект 'Split' и в этом проекте, 
   массив из 10 элементов заполненный случайными числами разделить
   на 2 массива минимально возможного размера - even[] и odd[].
   В массив even[] скопировать все четные числа из исходного массива,
   а в массив odd[] - все нечетные числа из исходного массива.

DONE:
Вычислить максимально возможный объем адресуемой памяти для архитектуры x86-64.
Адреса памяти в этой архитектуре занимают 8 Байта.

////////////////////////////////////////////////////////////////////////
////////////				  Functions						////////////
////////////////////////////////////////////////////////////////////////


DONE:
1. Шаблонизировать все оставшиеся функции;
	!!! СДЕЛАТЬ COMMIT И PUSH !!!
2. От ветки 'FunctionTemplates' создать ветку 'SeparatedTemplates' 
   и в ней вынести шаблонные функции в отдельные файлы;

DONE:
0. На ветке 'FunctionsSeparation' вынести все остальные функции в соответствующие файлы;
   СДЕЛАТЬ COMMIT И PUSH;
1. *На ветке 'master', в проекте 'Functions\Arrays' написать функцию	??? Search(???),
   которая находит в массиве повторяющиеся элементы, выводит их на экран и выводит 
   на экран количество их повторений;

DONE:
0. Зарегистрироваться в Discord:   https://discord.com/;
1. Сделать commit и создать ветку 'FunctionsOverloading';
2. На ветке 'FunctionsOverloading', в проете 'Functions\Arrays' 
   перегрузить все функции для типов данных 'int', 'double' и 'char';

TODO:
В проект 'Functions\Arrays' написать следующие функции:
	??? FillRand(???);	//заполняет массив случайными числами	DONE
	??? Print(???);		//выводит массив на экран				DONE
	??? Sum(???);		//возвращает сумму элементов массива	DONE
	??? Avg(???);		//возвращает среднее-арифметическое элементов массива	DONE
	??? minValueIn(???);//возвращает минимальное значение в массиве		DONE
	??? maxValueIn(???);//возвращает максимальное значение в массиве	DONE
	??? shiftLeft(???);	//циклически сдвигает массив на заданное число элементов влево	DONE
	??? shiftRight(???);//циклически сдвигает массив на заданное число элементов вправо	DONE
	??? Sort(???);		//Сортирует массив в порядке возрастания		DONE
	??? Unique(???);	//Заполняет массив униакльными случайными числами		DONE
	----------------------------------------------------------------------------------------
	??? Search(???);	//Находит в массиве повторяющиеся элементы, выводит их на экран,
						//и выводит на экран количество их повторений


DONE:
0. !!!!!!!!!!!!!!!!	ВЫУЧИТЬ ТЕОРИЮ	!!!!!!!!!!!!!!!!!!!!!!!!!
1. Написать функцию ??? Factorial(???), которая принимает число, и возвращает факториал этого числа; DONE
2. Написать функцию ??? Power(???), которая возводит число в сетень;

DONE:
1. В проекте 'Arrays' решить следующие задачи:	DONE
	-ввести значения элементов массива с клавиатуры;
	-вывести элементы массива на экран в прямом порядке (от нулевого элемента до последнего);
	-вывести элементы массива на экран в обратном порядке (от последнего элемента до нулевого);
	-вычислить сумму элементов массива;
	-вычислить среднее-арифметическое элементов массива;
	-найти минимальное и максимальное значения в массиве, и вывести их на экран;
	!!! ВСЕ ЭТИ ДЕЙСТВИЯ НУЖНО ВЫПОЛНИТЬ НАД ОДНИМ МАССИВОМ, ДЛЯ КАЖДОЙ ЗАДАЧИ НЕ НУЖНО СОЗДАВАТЬ НОВЫЙ МАССИВ !!!
2. В Solution 'Arrays' добавить проект 'Shift', и в этом проекте есть массив из 10 элементов,	DONE
   проинициализированный числами Фибоначчи. Нужно выполнить циклический сдвиг этого массива 
   на заданное число элементов влево.
   Например:
	0	1	1	2	3	5	8	13	21	34
	1	1	2	3	5	8	13	21	34	 0
	1	2	3	5	8	13	21	34	 0	 1
	2	3	5	8	13	21	34	 0	 1	 1
	3	5	8	13	21	34	 0	 1	 1	 2
3. В Solution 'Arrays' добавить проект 'Binary', и в этом проекте, целое число, введенное с клавиатуры
   перевести в двоичную систему счисления;
3.1. Выполнить перевод в двоичную СС при помощи побитовых операторов;
	https://www.cyberforum.ru/cpp-beginners/thread2929108.html
4. В Solution 'Arrays' добавить проект 'Hex', и в этом проекте, целое число, введенное с клавиатуры
   перевести в шестнадцатеричную систему счисления;
5. В Solution 'Arrays' добавить проект 'Random', и в этом проекте заполнить массив случайными числами,
   в диапазоне заданном пользователем, вывести его на экран, затем отсортировать, и снова вывести на экран,
   уже отсортированный массив.

!!!		С сегодняшнего дня все домашние задания отправляются в виде ссылки на GitHub	!!!

DONE:
Прислать ссылку на свой GitHub;

DONE:
1. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/ChessBoard.jpg;
2. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/HardChess.jpg;
	Эту шахматную доску написать только при помощи двух циклов.
3. Вывести в консоль треугольник Паскаля;
4. Зарегистрироваться на github.com;
5. Используя побитовые операторы поменять местами две переменные, введенные с клавиатуры;

Hardcore:
Построить ряд Фибоначчи при помощи двух переменных.

DONE:
В проете 'FOR' решить следующие задачи:
1. Вычислить факториал числа введенного с клавиатуры.
   Факториал - это произведение ряда чисел от 1 до указанного
   5! = 1*2*3*4*5 = 120;
2. Написать программу, которая возводит указанное число в указанную степень.
   Основание и показатель степени вводятся с клавиатуры.
3. Вывести на экран все ASCII-символы по 16 символов в строке. 
   Символы должны разделяться пробелом.
4. Вывести на экран ряд Фибоначчи до указанного предела.
	Ряд Фибоначчи можно построить из двух чисел: 0 и 1.
	Каждый следующий член ряда - это сумма двух предыдущих членов:
	0	1	1	2	3	5	8	13
5. Вывести на экран заданное количество членов ряда Фибоначчи.
	0	1	1	2	3	5	8	13	21	34	55	89	144	233	377	610	987	1597	2584
6. Вывести на экран ряд простых чисел до предела, введенного с клавиатуры.
	Простым называется число, которое делится только на себя и на 1.
7. Вывести на экран таблицу умножения.
8. Вывести на экран таблицу Пифагора.
9. В Solution 'ControlStructures' добавить проект 'Geometry',
   и в этом проекте вывести в консоль следующие фигуры:
	https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/Geometria1.txt

DONE:
1. В Solution 'ControlStructures' добавить проект 'Ticket' и в нем реализовать следующую программу:
	Пользователь вводит номер автобусного билета, а программа говорит, этот билет счастливый, или обычный;
2. В Solution 'ControlStructures' добавить проект 'Shooter' и в нем реализовать следующую задачу:
	Пользователь нажимает на клавишу, а программа выводит на экран слово, описывающее действие:
		w - вперед
		s - назад
		a - влево
		d - вправо
		Space - прыжок
		Enter - огонь
		Escape - выход

DONE:
Пользователь вводит число с клавиатуры, и программа говорит, является ли это число палиндромом.
Палиндром - это число, которое чистается одинаково в обоих направлениях, напимер:
12321	- палиндром
1221	- палиндром
121		- палиндром
1		- палиндром
123		- НЕ палиндром

DONE:
1. Обеспечить единственное/множественное число при вводе температуры:
	 1 градус;
	 2 градуса;
	 5 градусов;
	15 градусов;
	23 градуса;
	27 градусов;
2. Написать калькулятор, который вычисляет выражения вида:
	2+3
	2+3=5;

DONE:
1. Что будет выведено на экран:
	int i = 0;
	if(i++ && i++)
	{
		cout << i << endl;
	}
2. Что будет выведено на экран:
	int i = 0;
	if(++i && i++)
	{
		cout << i << endl;
	}
3. Что будет выведено на экран:
	int i = 0;
	if(i++ && ++i)
	{
		cout << i << endl;
	}
4. Что будет выведено на экран:
	int i = 0;
	if(i++ || i++)
	{
		cout << i << endl;
	}

DONE:
0. Выучить теорию!!!
	Следующие задачи нужно решить без компилятора:
1. Что будет выведено на экран:
	int i = 0;
	i = ++i + ++i;
	cout << i << endl;
2. Что будет выведено на экран:
	int i = 0;
	i = i++ + ++i;
	cout << i << endl;
3. Что будет выведено на экран:
	int i = 0;
	i = i++ + 1 + ++i * 2;
	cout << i << endl;
4. Что будет выведено на экран:
	int i = 0;
	i = i++ + 1 + ++i *= 2;
	cout << i << endl;
5. Что будет выведено на экран:
	int i = 0;
	i += i++ + 1 + ++i *= 2;
	cout << i << endl;

DONE:
IEEE-754:http://www.softelectro.ru/ieee754.html

DONE:
https://legacy.cplusplus.com/doc/tutorial/constants/

DONE:
1. Выучить теорию по типам данных;
2. Решить все задачи из файла:
	https://github.com/okovtun/BV_318/blob/master/DataTypes/VariablesTask.pdf

DONE:
1. Выучить теорию;
2. Вывести в консоль стишок "В лесу родилась Ёлочка".
   стишок должен быть выровнен по середине окна консоли,
   и его куплеты должны быть разделены пустой строкой.
   В качестве отчета прислать исходный файл программы 
   'main.cpp' или 'Source.cpp';